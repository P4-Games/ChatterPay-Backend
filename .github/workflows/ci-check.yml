name: 'ci-check'

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Verify Bun installation
        run: bun --version

      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

  prettier:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Run Prettier
        run: bun x prettier --check .

      - name: Check for uncommitted changes
        run: git diff --exit-code

  lint:
    name: Check with Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Bun types
        run: bun add -d @types/bun

      - name: Run TypeScript type check
        run: bun x tsc --noEmit

      - name: Run ESLint
        run: bun x eslint . --max-warnings=0

  tests:
    name: Test Application
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Ensure axios is installed
        run: bun add axios

      - name: Run tests
        run: bun x vitest --exclude test/services/coingecko/coingeckoService.test.ts

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t chatterpay-back .

      - name: Report Status
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"state": "success", "description": "Check Status Report", "context": "Check Status Report"}' \
            https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}
