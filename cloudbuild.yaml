steps:
    - name: 'gcr.io/cloud-builders/npm'
      id: CreateEnv
      args: ['run', 'create-env']
      env:
          - BUN_ENV=${_BUN_ENV}
          - ALCHEMY_API_KEY=${_ALCHEMY_API_KEY}
          - INFURA_API_KEY=${_INFURA_API_KEY}
          - MONGO_URI=${_MONGO_URI}
          - THIRDWEB_CLIENT_ID=${_THIRDWEB_CLIENT_ID}
          - THIRDWEB_CLIENT_SECRET=${_THIRDWEB_CLIENT_SECRET}
          - PINATA_JWT=${_PINATA_JWT}
          - GATEWAY_URL=${_GATEWAY_URL}
          - ICP_CANISTER_ID=${_ICP_CANISTER_ID}
          - ICP_MNEMONIC=${_ICP_MNEMONIC}
          - BOT_API_URL=${_BOT_API_URL}
          - BOT_DATA_TOKEN=${_BOT_DATA_TOKEN}
          - NFT_UPLOAD_IMAGE_ICP=${_NFT_UPLOAD_IMAGE_ICP}
          - NFT_UPLOAD_IMAGE_IPFS=${_NFT_UPLOAD_IMAGE_IPFS}
          - GCP_BUCKET_BASE_URL=${_GCP_BUCKET_BASE_URL}
      secretEnv: ['CHATIZALO_TOKEN', 'FRONTEND_TOKEN', 'PRIVATE_KEY', 'SIGNING_KEY']

    - name: 'gcr.io/cloud-builders/docker'
      id: Build
      args:
          [
              'build',
              '--no-cache',
              '-t',
              '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA',
              '-f',
              'Dockerfile',
              '--build-arg',
              'BUN_ENV=${_BUN_ENV}',
              '--build-arg',
              'ALCHEMY_API_KEY=${_ALCHEMY_API_KEY}',
              '--build-arg',
              'INFURA_API_KEY=${_INFURA_API_KEY}',
              '--build-arg',
              'MONGO_URI=${_MONGO_URI}',
              '--build-arg',
              'THIRDWEB_CLIENT_ID=${_THIRDWEB_CLIENT_ID}',
              '--build-arg',
              'THIRDWEB_CLIENT_SECRET=${_THIRDWEB_CLIENT_SECRET}',
              '--build-arg',
              'PRIVATE_KEY=$$PRIVATE_KEY',
              '--build-arg',
              'SIGNING_KEY=$$SIGNING_KEY',
              '--build-arg',
              'PINATA_JWT=${_PINATA_JWT}',
              '--build-arg',
              'GATEWAY_URL=${_GATEWAY_URL}',
              '--build-arg',
              'ICP_CANISTER_ID=${_ICP_CANISTER_ID}',
              '--build-arg',
              'ICP_MNEMONIC=${_ICP_MNEMONIC}',
              '--build-arg',
              'BOT_API_URL=${_BOT_API_URL}',
              '--build-arg',
              'BOT_DATA_TOKEN=${_BOT_DATA_TOKEN}',
              '--build-arg',
              'NFT_UPLOAD_IMAGE_ICP=${_NFT_UPLOAD_IMAGE_ICP}',
              '--build-arg',
              'NFT_UPLOAD_IMAGE_IPFS=${_NFT_UPLOAD_IMAGE_IPFS}',
              '--build-arg',
              'GCP_BUCKET_BASE_URL=${_GCP_BUCKET_BASE_URL}',
              '--build-arg',
              'ARBITRUM_SEPOLIA_RPC_URL=${_ARBITRUM_SEPOLIA_RPC_URL}',
              '--build-arg',
              'CHATIZALO_TOKEN=$$CHATIZALO_TOKEN',
              '--build-arg',
              'FRONTEND_TOKEN=$$FRONTEND_TOKEN',
              '.',
          ]
      secretEnv: ['CHATIZALO_TOKEN', 'FRONTEND_TOKEN', 'PRIVATE_KEY', 'SIGNING_KEY']

    - name: 'gcr.io/cloud-builders/docker'
      id: Push
      args:
          [
              'push',
              '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA',
          ]

    - name: 'gcr.io/cloud-builders/gcloud'
      id: Deploy
      entrypoint: gcloud
      args:
          [
              'run',
              'deploy',
              '$_SERVICE_NAME',
              '--platform',
              'managed',
              '--region',
              '$_DEPLOY_REGION',
              '--image',
              '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA',
              '--labels',
              'managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID',
              '--quiet',
              '--allow-unauthenticated',
          ]

availableSecrets:
    secretManager:
        - versionName: projects/$PROJECT_ID/secrets/${_CHATIZALO_TOKEN_SECRET_NAME}/versions/latest
          env: 'CHATIZALO_TOKEN'
        - versionName: projects/$PROJECT_ID/secrets/${_FRONTEND_TOKEN_SECRET_NAME}/versions/latest
          env: 'FRONTEND_TOKEN'
        - versionName: projects/$PROJECT_ID/secrets/${_PRIVATE_KEY_SECRET_NAME}/versions/latest
          env: 'PRIVATE_KEY'
        - versionName: projects/$PROJECT_ID/secrets/${_SIGNING_KEY_SECRET_NAME}/versions/latest
          env: 'SIGNING_KEY'

images:
    - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA

options:
    logging: CLOUD_LOGGING_ONLY